{"ast":null,"code":"var _jsxFileName = \"/home/wiz123/Desktop/MI-PythonBenchmark/Kaggle/workLabs/webApps/FrontEndFrameWrk/React/JobsHurdle/Proj1-VicRecruit/proj2-owm-leaflet/src/DisplayMapClass.js\";\n//  cosmetic files \nimport logo from \"./logo.svg\";\nimport './App.css'; //  src/DisplayMapClass.js\n\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DisplayMapClass extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.mapRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      // The map instance to use during Cleanup\n      map: null\n    };\n  }\n\n  componentDidMount() {\n    const L = window.L;\n    var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> contributors</a> <a href=\"https://www.hotosm.org/\" target=\"_blank\">Tiles courtesy of Humanitarian OpenStreetMap Team</a>'\n    });\n    var temp = L.OWM.temperature({\n      showLegend: false,\n      opacity: 0.5,\n      appId: 'b4f215ca39fba72abf5e8b413859f1dd'\n    });\n    var city = L.OWM.current({\n      interval: 15,\n      lang: 'en'\n    }); //\n    //console.log(\"L referst to >>>\"+L.map ('map' , { center: new L.LatLng(51.5,10), zoom: 10, layers: [osm] } ).toString());\n    //^^^^^^^^^Australia center: new L.LatLng(144.96,-37.81)\n\n    if (this.mapRef.current !== undefined && this.mapRef.current !== null) {\n      this.mapRef.current.off();\n      this.mapRef.current.remove();\n      this.mapRef.off();\n      this.mapRef.remove();\n      this.mapRef.dispose();\n      this.mapRef = null;\n      this.state.map.off();\n      this.state.map.remove();\n    }\n\n    const map = L.map(this.mapRef, {\n      center: new L.LatLng(51.5, 10),\n      zoom: 10,\n      layers: [osm]\n    });\n    var baseMaps = {\n      \"OSM Standard\": osm\n    };\n    var overlayMaps = {\n      \"Temperature\": temp,\n      \"Cities\": city\n    };\n    var layerControl = L.control.layers(baseMaps, overlayMaps).addTo(this.mapRef.current); //const map = this.mapRef;\n\n    this.setState({\n      map\n    });\n  }\n\n  componentWillUnmount() {\n    //cleanup after the map to avoid memory leaks when this component exits the page\n    if (this.mapRef.current !== undefined && this.mapRef.current !== null) {\n      //this.mapRef.current.off();\n      // this.mapRef.current.remove(); \n      //this.mapRef.off();\n      //this.mapRef.remove();\n      //this.mapRef.dispose();\n      this.mapRef = null;\n      this.state.map.off();\n      this.state.map.remove();\n    } //----------\n\n\n    if (!(this.state.map == null)) {\n      console.log('----call of disposing function for map---');\n      this.state.map = null;\n    }\n  }\n\n  render() {\n    if (!(this.state.map == null)) {\n      console.log('download000' + this.state.map);\n      return (\n        /*#__PURE__*/\n        //Set a height on the map so it will display \n        _jsxDEV(\"div\", {\n          id: \"map\",\n          ref: this.mapRef,\n          style: {\n            border: \"dotted\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      );\n    }\n\n    return (\n      /*#__PURE__*/\n      // return default value\n      //<div> \"loading ..... \" </div>\n      _jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }, this)\n    );\n  }\n\n} //~~~end of class","map":{"version":3,"sources":["/home/wiz123/Desktop/MI-PythonBenchmark/Kaggle/workLabs/webApps/FrontEndFrameWrk/React/JobsHurdle/Proj1-VicRecruit/proj2-owm-leaflet/src/DisplayMapClass.js"],"names":["React","DisplayMapClass","Component","mapRef","createRef","state","map","componentDidMount","L","window","osm","tileLayer","maxZoom","attribution","temp","OWM","temperature","showLegend","opacity","appId","city","current","interval","lang","undefined","off","remove","dispose","center","LatLng","zoom","layers","baseMaps","overlayMaps","layerControl","control","addTo","setState","componentWillUnmount","console","log","render","border","logo"],"mappings":"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","sourcesContent":["//  cosmetic files \nimport logo from './logo.svg';\nimport './App.css';\n\n//  src/DisplayMapClass.js\n\nimport * as React from 'react' ;\n\nexport class DisplayMapClass extends React.Component {\n\n    mapRef = React.createRef();\n    \n    state = {\n        // The map instance to use during Cleanup\n        map: null\n    };\n    \n    componentDidMount() {\n        \n        \n\n        const L = window.L;\n        \n        var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                maxZoom: 18, \n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> contributors</a> <a href=\"https://www.hotosm.org/\" target=\"_blank\">Tiles courtesy of Humanitarian OpenStreetMap Team</a>' });\n        \n        var temp = L.OWM.temperature( { showLegend: false, opacity: 0.5, appId: 'b4f215ca39fba72abf5e8b413859f1dd' } );\n        var city = L.OWM.current( { interval: 15 , lang: 'en' } );//\n        //console.log(\"L referst to >>>\"+L.map ('map' , { center: new L.LatLng(51.5,10), zoom: 10, layers: [osm] } ).toString());\n                                                       //^^^^^^^^^Australia center: new L.LatLng(144.96,-37.81)\n        if (  (this.mapRef.current !== undefined) && (this.mapRef.current !== null) )\n            { \n                this.mapRef.current.off();\n                this.mapRef.current.remove(); \n                this.mapRef.off();\n                this.mapRef.remove();\n                this.mapRef.dispose();\n                this.mapRef = null;\n                this.state.map.off();\n                this.state.map.remove();\n            }\n       const map = L.map ( this.mapRef,\n                                 \n                                { center: new L.LatLng(51.5,10), \n                                  zoom: 10,\n                                  layers: [osm]\n                                } \n                             );\n       var baseMaps = { \"OSM Standard\":  osm };\n       var overlayMaps = { \"Temperature\": temp , \"Cities\": city };\n       var layerControl = L.control.layers(baseMaps,overlayMaps).addTo(this.mapRef.current);\n        \n       //const map = this.mapRef;\n        \n        this.setState({ map });\n     }\n     \n     componentWillUnmount(){\n         \n         //cleanup after the map to avoid memory leaks when this component exits the page\n        if (  (this.mapRef.current !== undefined) && (this.mapRef.current !== null) )\n            { \n                //this.mapRef.current.off();\n               // this.mapRef.current.remove(); \n                //this.mapRef.off();\n                //this.mapRef.remove();\n                //this.mapRef.dispose();\n                this.mapRef = null;\n                this.state.map.off();\n                this.state.map.remove();\n            }\n         //----------\n         if (!( this.state.map == null ) )\n            {\n                console.log('----call of disposing function for map---');\n                 this.state.map = null;\n            }\n      }   \n      \n      \n      render() {\n         \n         if (! (this.state.map == null) ) {\n                console.log('download000' + (this.state.map));\n                return( \n                    \n                    //Set a height on the map so it will display \n                    <div id='map' ref = {this.mapRef} style={ { border: \"dotted\" } }>\n                    </div>\n                    \n                );\n            }\n            return(\n               // return default value\n               //<div> \"loading ..... \" </div>\n               <div className=\"App\">\n                   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n               </div>\n               );          \n      }\n        \n} //~~~end of class\n"]},"metadata":{},"sourceType":"module"}